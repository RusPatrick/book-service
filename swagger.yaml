swagger: "2.0"
info:
  version: "1.0.0"
  title: "Книжный сервис"
  description: "Книжный сервис c cookie авторизацией"
  contact:
    url: "https://github.com/RusPatrick/book-service"
    email: "farrahov95@mail.ru"
host: "localhost:8000"
basePath: "/api/v1"
tags:
- name: "books"
schemes:
- "http"
paths:
  /books:
    post:
      tags:
      - "books"
      summary: "Добавление новой книги в хранилице"
      description: ""
      operationId: "addBook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Данные добавляемой книги"
        required: true
        schema:
          $ref: "#/definitions/RequestBook"
      responses:
        201:
          description: "Книга добавлена"
          schema:
            $ref: '#/definitions/ResponseBook'
        401:
          description: "Неавторизован"
        500:
          description: "Внутренняя ошибка сервиса"
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
      - "books"
      summary: "Найти все книги по фильтрам"
      description: "Получение книг по названию(подстрока), году издания(диапазон), количеству страниц(диапазон)"
      operationId: "findByFilters"
      produces:
      - "application/json"
      parameters:
      - name: "term"
        in: "query"
        description: "часть названия книги"
        required: false
        type: "string"
      - name: "minYear"
        in: "query"
        description: "нижняя граница диапазона года издания"
        required: false
        type: "integer" 
        format: "int32"
      - name: "maxYear"
        in: "query"
        description: "верхняя граница диапазона года издания"
        required: false
        type: "integer"
        format: "int32"
      - name: "minPage"
        in: "query"
        description: "нижняя граница диапазона количества страниц"
        required: false
        type: "integer"
        format: "int32"
      - name: "maxPage"
        in: "query"
        description: "верхняя граница диапазона количества страниц"
        required: false
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "успешный запрос"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ResponseBook"
        401:
          description: "Неавторизован"
        500:
          description: "Внутренняя ошибка сервиса"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /books/{bookID}:
    patch:
      tags:
      - "books"
      summary: "Обновление существующей книги"
      description: ""
      operationId: "updateBook"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "bookID"
        in: "path"
        description: "ID обновляемой книги"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "обновление книги"
        required: true
        schema:
          $ref: "#/definitions/RequestBook"
      responses:
        200:
          description: "Книга успешно обновлена"
          schema:
            $ref: '#/definitions/ResponseBook'
        401:
          description: "Неавторизован"
        500:
          description: "Внутренняя ошибка сервиса"
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      tags:
      - "books"
      summary: "Получение книги"
      description: ""
      operationId: "getBook"
      produces:
      - "application/json"
      parameters:
      - name: "bookID"
        in: "path"
        description: "ID книги"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "успешный запрос"
        401:
          description: "Неавторизован"
        500:
          description: "Внутренняя ошибка сервиса"
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      tags:
      - "books"
      summary: "Удаление существующей книги"
      description: ""
      operationId: "deleteBook"
      parameters:
      - name: "bookID"
        in: "path"
        description: "ID удаляемой книги"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Книга успешно удалена"
        401:
          description: "Неавторизован"
        500:
          description: "Внутренняя ошибка сервиса"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /signup:
    post:
      tags:
      - "user"
      summary: "Create user"
      description: ""
      operationId: "createUser"
      consumes: 
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/SignUp"
      responses:
        200:
          description: OK
        500:
          description: "Внутренняя ошибка сервиса"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /login:
    get:
      tags:
      - "user"
      summary: "Вход в учетную запись"
      description: ""
      operationId: "loginUser"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        schema:
          $ref: '#/definitions/Login'
      responses:
        200:
          description: "successful operation"
        400:
          description: "Неверный email или пароль"
        500:
          description: "Внутренняя ошибка сервиса"
          schema:
            $ref: "#/definitions/ErrorResponse"
  /me:
    delete:
      tags:
      - "user"
      summary: "удаление аккаунта"
      description: ""
      operationId: "deleteUser"
      responses:
        200:
          description: "аккаунт успешно удален"
        400:
          description: "Неверный email или пароль"
        500:
          description: "Внутренняя ошибка сервиса"
          schema:
            $ref: "#/definitions/ErrorResponse"
definitions:
  SignUp:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  Login:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  RequestBook:
    type: "object"
    properties:
      author:
        type: "string"
      title:
        type: "string"
      publish_year:
        type: "integer"
      number_pages:
        type: "integer"
        format: "int"
  ResponseBook:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int"
      author:
        type: "string"
      title:
        type: "string"
      publish_year:
        type: "integer"
      number_pages:
        type: "integer"
        format: "int"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
      email:
        type: "string"
      password:
        type: "string"
    xml:
      name: "User"
  ErrorResponse:
    type: "object"
    properties:
      type:
        type: "integer"
        format: "int32"
      title:
        type: "string"
      detail:
        type: "string"
      errorType: 
        type: "string"
      status: 
        type: "integer"
        format: "int"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"